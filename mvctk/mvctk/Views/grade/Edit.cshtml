@model mvctk.Models.grade

@{ 
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm("Edit", "grade", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>grade</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)
        @Html.HiddenFor(model => model.CourseID)

        <div class="form-group">
            @Html.Label("Course ID")
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseID,new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Student ID")
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GradeA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradeA, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "100" } })
                @Html.ValidationMessageFor(model => model.GradeA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GradeB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradeB, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "100" } })
                @Html.ValidationMessageFor(model => model.GradeB, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>





    }

    <div>
        @Html.ActionLink("Back to List", "show")
    </div>
</body>
</html>
